装饰模式：
当需要扩展一个不能修改的类的功能时，或者说，创建一个具有某个类全部功能，但是将会有新的功能的时候使用
它和静态proxy有很多类似的地方，继承自同一个抽象类，或实现同一个抽象接口，然后持有源对象的引用，使用源对象
去实现自己要重写的方法，区别就是，proxy生成之后是用于访问原对象的，但是wrapper其实是将原对象以这种方式
封装成一个抽象类，以便后续的扩展类能够拥有原本的某个功能，同时又能够继续扩展功能，或者为原来的某个功能
进行更进